<ToggleButton x:Class="AgileBIM.XamlTemplates.AgileToggleButtonDesigner"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
              xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
              xmlns:local="clr-namespace:AgileBIM.XamlTemplates"
              mc:Ignorable="d"              
              d:DesignHeight="400" d:DesignWidth="400">    
    <ToggleButton.Template>
        <ControlTemplate TargetType="{x:Type ToggleButton}" 
                         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
            <Border x:Name="border" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    CornerRadius="{Binding BorderRadius, RelativeSource={RelativeSource AncestorType=ToggleButton}}" 
                    Background="{TemplateBinding Background}" 
                    SnapsToDevicePixels="True">
                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <ContentPresenter x:Name="contentPresenter"
                                      RecognizesAccessKey="True" 
                                      ContentTemplate="{TemplateBinding ContentTemplate}" 
                                      Content="{TemplateBinding Content}" 
                                      ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                      Focusable="False" 
                                      HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType=ToggleButton}}" 
                                      Margin="{TemplateBinding Padding}"                                       
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                      VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType=ToggleButton}}"/>
                    <Viewbox Margin="1" Visibility="Collapsed" x:Name="CheckMark">
                        <Path Width="7"
                              Height="7"
                              SnapsToDevicePixels="False"
                              StrokeEndLineCap="Round"
                              StrokeStartLineCap="Round"
                              Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ToggleButton}}"
                              StrokeThickness="1">
                            <Path.Style>
                                <Style TargetType="{x:Type Path}">

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="True">
                                            <Setter Property="Data" Value="M 1 4 L 3 6.5 M 3 6.5 L 6 0.5"/>

                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="False">
                                            <Setter Property="Data" Value="M 0.5 0.5 L 6.5 6.5 M 0.5 6.5 L 6.5 0.5"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>

                        </Path>
                    </Viewbox>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding CheckVisibility, RelativeSource={RelativeSource Self}}" Value="Visible">
                    <Setter Property="Visibility" TargetName="CheckMark" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="contentPresenter" Value="Collapsed"/>
                </DataTrigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="{Binding BackgroundChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{Binding BorderBrushChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}"/>
                    <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding ForegroundChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="{Binding BackgroundDisabled, RelativeSource={RelativeSource AncestorType=ToggleButton}}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{Binding BorderBrushDisabled, RelativeSource={RelativeSource AncestorType=ToggleButton}}"/>
                    <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding ForegroundDisabled, RelativeSource={RelativeSource AncestorType=ToggleButton}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="{Binding BackgroundHover, RelativeSource={RelativeSource AncestorType=ToggleButton}}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{Binding BorderBrushHover, RelativeSource={RelativeSource AncestorType=ToggleButton}}"/>
                    <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding ForegroundHover, RelativeSource={RelativeSource AncestorType=ToggleButton}}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="{Binding BackgroundPressed, RelativeSource={RelativeSource AncestorType=ToggleButton}}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{Binding BorderBrushPressed, RelativeSource={RelativeSource AncestorType=ToggleButton}}"/>
                    <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding ForegroundPressed, RelativeSource={RelativeSource AncestorType=ToggleButton}}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </ToggleButton.Template>
</ToggleButton>
