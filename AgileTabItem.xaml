<TabItem x:Class="AgileBIM.XamlTemplates.AgileTabItemDesigner"
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
         xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
         xmlns:local="clr-namespace:AgileBIM.XamlTemplates"
         mc:Ignorable="d"         
         d:DesignHeight="400" d:DesignWidth="400">
    <TabItem.Template>
        <ControlTemplate TargetType="{x:Type TabItem}" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
            <Grid Name="templateRoot" Background="Transparent">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TabIsRotated, RelativeSource={RelativeSource AncestorType=TabItem}}" Value="true">
                                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                                <Setter Property="LayoutTransform">
                                    <Setter.Value>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="-90"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Border Name="mainBorder"
                        BorderBrush="{Binding TabBorderBrush, RelativeSource={RelativeSource AncestorType=TabItem}}" 
                        BorderThickness="{Binding TabBorderThickness, RelativeSource={RelativeSource AncestorType=TabItem}}" 
                        CornerRadius="{Binding TabBorderRadius, RelativeSource={RelativeSource AncestorType=TabItem}}"
                        Background="{Binding TabBackground, RelativeSource={RelativeSource AncestorType=TabItem}}" 
                        Padding="0"
                        Margin="0">                    
                </Border>
                <ContentPresenter Name="contentPresenter"
                                  ContentTemplate="{Binding HeaderTemplate, RelativeSource={RelativeSource AncestorType=TabItem}}"
                                  Content="{Binding Header, RelativeSource={RelativeSource AncestorType=TabItem}}"
                                  ContentStringFormat="{Binding HeaderStringFormat, RelativeSource={RelativeSource AncestorType=TabItem}}"
                                  ContentSource="Header" 
                                  Focusable="False"                                   
                                  HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType=TabItem}}" 
                                  Margin="{Binding Padding, RelativeSource={RelativeSource AncestorType=TabItem}}"
                                  RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{Binding SnapsToDevicePixels, RelativeSource={RelativeSource AncestorType=TabItem}}"
                                  TextBlock.FontWeight="{Binding TabFontWeight, RelativeSource={RelativeSource AncestorType=TabItem}}"
                                  TextBlock.FontSize="{Binding TabFontSize, RelativeSource={RelativeSource AncestorType=TabItem}}"
                                  VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType=TabItem}}" />
            </Grid>
            <ControlTemplate.Triggers>                
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False"/>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" TargetName="mainBorder" Value="{Binding TabBackgroundHover, RelativeSource={RelativeSource AncestorType=TabItem}}"/>
                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="{Binding TabBorderBrushHover, RelativeSource={RelativeSource AncestorType=TabItem}}"/>
                </MultiDataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False"/>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" TargetName="mainBorder" Value="{Binding TabBackground, RelativeSource={RelativeSource AncestorType=TabItem}}"/>
                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="{Binding TabBorderBrush, RelativeSource={RelativeSource AncestorType=TabItem}}"/>
                </MultiDataTrigger>


                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False">
                    <Setter Property="Margin" TargetName="templateRoot" Value="{Binding Margin, RelativeSource={RelativeSource AncestorType=TabItem}}"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                    <Setter Property="Panel.ZIndex" Value="100"/>
                    <Setter Property="Margin" TargetName="templateRoot" Value="{Binding TabSelectedMargin, RelativeSource={RelativeSource AncestorType=TabItem}}"/>
                    <Setter Property="Background" TargetName="mainBorder" Value="{Binding TabBackgroundSelected, RelativeSource={RelativeSource AncestorType=TabItem}}"/>
                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="{Binding TabBorderBrushSelected, RelativeSource={RelativeSource AncestorType=TabItem}}"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False">
                    <Setter Property="Opacity" TargetName="templateRoot" Value="0.5"/>
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </TabItem.Template>
</TabItem>
