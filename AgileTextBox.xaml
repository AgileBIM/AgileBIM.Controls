<TextBox x:Class="AgileBIM.Controls.AgileTextBox"
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
         xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
         xmlns:local="clr-namespace:AgileBIM.Controls"
         mc:Ignorable="d" 
         VerticalContentAlignment="Center"
         HorizontalContentAlignment="Left"
         BorderThickness="2"
         Padding="3,0"
         MinWidth="20"
         d:DesignHeight="40" d:DesignWidth="100">
    <TextBox.Template>
        <ControlTemplate TargetType="{x:Type TextBox}">
            <Grid x:Name="gridRoot">
                <Border x:Name="border" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" 
                                    CornerRadius="{Binding BorderRadius, RelativeSource={RelativeSource AncestorType=TextBox}}"
                                    Padding="1"
                                    SnapsToDevicePixels="True">
                    <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                        <ScrollViewer.Style>
                            <Style TargetType="{x:Type ScrollViewer}">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ScrollViewer.Style>
                    </ScrollViewer>
                </Border>
                <Border BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" Padding="1"
                                    BorderBrush="Transparent" SnapsToDevicePixels="True" IsHitTestVisible="False">
                    <TextBlock Padding="0" 
                                   IsEnabled="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=TextBox}}"
                                   IsHitTestVisible="False">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Text" Value="{Binding Watermark, RelativeSource={RelativeSource AncestorType=TextBox}}"/>
                                <Setter Property="HorizontalAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType=TextBox}}"/>
                                <Setter Property="VerticalAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType=TextBox}}"/>
                                <Setter Property="Margin" Value="{Binding Padding, RelativeSource={RelativeSource AncestorType=TextBox}}"/>
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Setter Property="FontFamily" Value="{Binding WatermarkFontFamily, RelativeSource={RelativeSource AncestorType=TextBox}}"/>
                                <Setter Property="Foreground" Value="{Binding WatermarkForeground, RelativeSource={RelativeSource AncestorType=TextBox}}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=TextBox}}" Value="False">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                        <Setter Property="Text" Value="Disabled"/>
                                        <Setter Property="FontFamily" Value="Arial"/>
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>                                            
                                            <Condition Binding="{Binding Text, RelativeSource={RelativeSource AncestorType=TextBox}}" Value=""/>
                                            <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource AncestorType=TextBox}}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Border>
                <Popup x:Name="errMessage" 
                       Placement="Bottom"    
                       AllowsTransparency="True"
                       Width="{Binding ActualWidth, ElementName=border}">
                    <Grid>
                        <Border BorderBrush="{Binding ValidationPopupBorderBrush, RelativeSource={RelativeSource AncestorType=TextBox}}" 
                            BorderThickness="{Binding ValidationPopupBorderThickness, RelativeSource={RelativeSource AncestorType=TextBox}}"                            
                            Margin="{Binding ValidationPopupMargin, RelativeSource={RelativeSource AncestorType=TextBox}}"
                            CornerRadius="{Binding ValidationPopupBorderRadius, RelativeSource={RelativeSource AncestorType=TextBox}}"
                            Background="{Binding ValidationPopupBackground, RelativeSource={RelativeSource AncestorType=TextBox}}">
                            <TextBlock Text="{Binding ValidationMessage, RelativeSource={RelativeSource AncestorType=TextBox}}"
                                   Margin="{Binding ValidationMessageMargin, RelativeSource={RelativeSource AncestorType=TextBox}}"
                                   TextWrapping="Wrap"/>
                        </Border>
                    </Grid>
                    <Popup.Style>                        
                        <Style TargetType="{x:Type Popup}">
                            <Setter Property="IsOpen" Value="False"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource AncestorType=TextBox}}" Value="true"/>
                                        <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType=TextBox}}" Value="false"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsOpen" Value="{Binding ValidationPopupIsOpen, RelativeSource={RelativeSource AncestorType=TextBox}}"/>
                                </MultiDataTrigger>                                
                            </Style.Triggers>
                        </Style>
                    </Popup.Style>
                </Popup>
            </Grid>


            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsReadOnly" Value="true">
                    <Setter Property="Opacity" Value="0.7"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{Binding BorderBrushFocused, RelativeSource={RelativeSource AncestorType=TextBox}}"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{Binding BorderBrushFocused, RelativeSource={RelativeSource AncestorType=TextBox}}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </TextBox.Template>
</TextBox>
