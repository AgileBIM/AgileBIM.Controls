<TextBox x:Class="AgileBIM.Controls.WatermarkTextBox"
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
         xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
         xmlns:local="clr-namespace:AgileBIM.Controls"
         mc:Ignorable="d" 
         x:Name="tbx"
         d:DesignHeight="40" d:DesignWidth="100">
    <TextBox.Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="MinWidth" Value="20"/>
            <Setter Property="Padding" Value="3,0"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Grid>
                            <Border x:Name="border" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" 
                                    CornerRadius="{Binding BorderRadius, ElementName=tbx}"
                                    SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                            <Border BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent"
                                    BorderBrush="Transparent" SnapsToDevicePixels="True" IsHitTestVisible="False">
                                <Label Padding="0" 
                                   IsEnabled="{Binding IsEnabled, ElementName=tbx}"                                   
                                   IsHitTestVisible="False">
                                    <Label.Style>
                                        <Style TargetType="{x:Type Label}">
                                            <Setter Property="Content" Value="{Binding Watermark, ElementName=tbx}"/>
                                            <Setter Property="HorizontalAlignment" Value="{Binding HorizontalContentAlignment, ElementName=tbx}"/>
                                            <Setter Property="VerticalAlignment" Value="{Binding VerticalContentAlignment, ElementName=tbx}"/>
                                            <Setter Property="Margin" Value="{Binding Padding, ElementName=tbx}"/>
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Setter Property="FontFamily" Value="{Binding WatermarkFontFamily, ElementName=tbx}"/>
                                            <Setter Property="Foreground" Value="{Binding WatermarkColor, ElementName=tbx}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsEnabled, ElementName=tbx}" Value="False">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                                    <Setter Property="Content" Value="Disabled"/>
                                                    <Setter Property="FontFamily" Value="Arial"/>
                                                </DataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Text, ElementName=tbx}" Value=""/>
                                                        <Condition Binding="{Binding IsFocused, ElementName=tbx}" Value="False"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Label.Style>
                                </Label>
                            </Border>
                        </Grid>


                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{Binding FocusedBorderColor, ElementName=tbx}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{Binding FocusedBorderColor, ElementName=tbx}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </TextBox.Style>
</TextBox>
