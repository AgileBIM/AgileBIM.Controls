<ComboBox x:Class="AgileBIM.XamlTemplates.AgileComboBoxDesigner"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
          xmlns:local="clr-namespace:AgileBIM.XamlTemplates"
          mc:Ignorable="d"
          d:DesignHeight="30" d:DesignWidth="50">
    <ComboBox.Template>
        <ControlTemplate TargetType="{x:Type ComboBox}"
                         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                         xmlns:d="http://schemas.microsoft.com/expression/blend/2008" >
            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" 
                       AllowsTransparency="True" 
                       Grid.ColumnSpan="2" 
                       IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"                        
                       Margin="1"
                       PopupAnimation="{Binding PopupAnimation, RelativeSource={RelativeSource AncestorType=ComboBox}}"                       
                       Placement="{Binding PopupPlacement, RelativeSource={RelativeSource AncestorType=ComboBox}}">
                    <Border x:Name="DropDownBorder"                             
                            BorderBrush="{Binding PopupBorderBrush, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                            BorderThickness="{Binding PopupBorderThickness, RelativeSource={RelativeSource AncestorType=ComboBox}}" 
                            CornerRadius="{Binding PopupBorderRadius, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                            MinWidth="{Binding ActualWidth, ElementName=templateRoot}"   
                            Padding="{Binding PopupContentsMargin, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                            Background="{Binding PopupBackground, RelativeSource={RelativeSource AncestorType=ComboBox}}">
                        <Border.Resources>
                            <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                            <Grid x:Name="Grid" 
                                                  HorizontalAlignment="Stretch" 
                                                  Width="auto" 
                                                  Margin="0">
                                                <Rectangle HorizontalAlignment="Stretch" 
                                                           VerticalAlignment="Stretch" 
                                                           Width="Auto" 
                                                           Height="Auto" 
                                                           Fill="Transparent" />
                                                <Border x:Name="Rectangle1" 
                                                        CornerRadius="7" 
                                                        HorizontalAlignment="Right" 
                                                        Width="12" 
                                                        VerticalAlignment="Stretch" 
                                                        Height="Auto" 
                                                        Background="{TemplateBinding Background}" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="Tag" Value="Horizontal">
                                                    <Setter TargetName="Rectangle1" Property="Width" Value="auto" />
                                                    <Setter TargetName="Rectangle1" Property="Height" Value="12" />
                                                    <Setter TargetName="Rectangle1" Property="VerticalAlignment" Value="Top"/>
                                                    <Setter TargetName="Rectangle1" Property="HorizontalAlignment" Value="Stretch"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style TargetType="{x:Type ScrollViewer}">
                                <Setter Property="CanContentScroll" Value="True"/>
                            </Style>
                            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                                <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
                                <Setter Property="Foreground" Value="{Binding PopupScrollBarBrush, RelativeSource={RelativeSource AncestorType=ComboBox}}" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="Width" Value="12" />
                                <Setter Property="Opacity" Value="0.3"/>
                                <Setter Property="Margin" Value="-2,0,0,0"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                                            <Grid x:Name="GridRoot" Width="12" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" >
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="0.00001*" />
                                                </Grid.RowDefinitions>

                                                <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                                    <Track.Thumb>
                                                        <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                                                    </Track.Thumb>
                                                    <Track.IncreaseRepeatButton>
                                                        <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                                    </Track.IncreaseRepeatButton>
                                                    <Track.DecreaseRepeatButton>
                                                        <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                                    </Track.DecreaseRepeatButton>
                                                </Track>
                                            </Grid>

                                            <ControlTemplate.Triggers>
                                                <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                                    <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                                                </Trigger>
                                                <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                                    <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                                                </Trigger>

                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                                                </Trigger>
                                                <Trigger Property="Orientation" Value="Horizontal">
                                                    <Setter TargetName="GridRoot" Property="LayoutTransform">
                                                        <Setter.Value>
                                                            <RotateTransform Angle="-90" />
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Margin" Value="0,-10,0,0"/>
                                                    <Setter TargetName="PART_Track" Property="LayoutTransform">
                                                        <Setter.Value>
                                                            <RotateTransform Angle="-90" />
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Width" Value="Auto" />
                                                    <Setter Property="Height" Value="12" />
                                                    <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                                    <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                                    <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Border.Resources>
                        <ScrollViewer x:Name="DropDownScrollViewer" CanContentScroll="True">
                            <Grid x:Name="grid"
                                  RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" 
                                        HorizontalAlignment="Left" 
                                        Height="0" 
                                        VerticalAlignment="Top"         
                                        Width="0">
                                    <Rectangle x:Name="OpaqueRect"
                                               Fill="{Binding Background, ElementName=DropDownBorder}" 
                                               Height="{Binding ActualHeight, ElementName=DropDownBorder}" 
                                               Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter"                                                
                                                KeyboardNavigation.DirectionalNavigation="Contained" 
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
                <ToggleButton x:Name="toggleButton" 
                              BorderBrush="{TemplateBinding BorderBrush}" 
                              BorderThickness="{TemplateBinding BorderThickness}" 
                              Background="{Binding Background, RelativeSource={RelativeSource AncestorType=ComboBox}}" 
                              Grid.ColumnSpan="2" 
                              Tag="{Binding}"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="ClickMode" Value="Press"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border x:Name="toggleRoot" 
                                                BorderBrush="{TemplateBinding BorderBrush}" 
                                                BorderThickness="{TemplateBinding BorderThickness}" 
                                                Background="{TemplateBinding Background}"
                                                CornerRadius="{Binding BorderRadius, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                                SnapsToDevicePixels="True">
                                            <Border x:Name="splitBorder" 
                                                    BorderBrush="Transparent" 
                                                    BorderThickness="1" 
                                                    HorizontalAlignment="Right" 
                                                    Margin="0" 
                                                    SnapsToDevicePixels="True" 
                                                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                <Viewbox Margin="{Binding ArrowMargin, RelativeSource={RelativeSource AncestorType=ComboBox}}">
                                                    <Path x:Name="Arrow"
                                                          Data="{TemplateBinding Tag}"
                                                          Fill="{Binding ArrowBrush, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                                          StrokeThickness="0"
                                                          HorizontalAlignment="Center"
                                                          Margin="0" 
                                                          VerticalAlignment="Center"/>
                                                </Viewbox>
                                            </Border>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true">
                                                <Setter Property="Background" TargetName="toggleRoot" Value="{Binding BackgroundPressed, RelativeSource={RelativeSource AncestorType=ComboBox}}"/>
                                                <Setter Property="BorderBrush" TargetName="toggleRoot" Value="{Binding BorderBrushPressed, RelativeSource={RelativeSource AncestorType=ComboBox}}"/>
                                                <Setter Property="Fill" TargetName="Arrow" Value="{Binding ArrowBrushPressed, RelativeSource={RelativeSource AncestorType=ComboBox}}"/>
                                             </DataTrigger>
                                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true">
                                                <Setter Property="Background" TargetName="toggleRoot" Value="{Binding BackgroundHover, RelativeSource={RelativeSource AncestorType=ComboBox}}"/>
                                                <Setter Property="BorderBrush" TargetName="toggleRoot" Value="{Binding BorderBrushHover, RelativeSource={RelativeSource AncestorType=ComboBox}}"/>
                                                <Setter Property="Fill" TargetName="Arrow" Value="{Binding ArrowBrushHover, RelativeSource={RelativeSource AncestorType=ComboBox}}"/>
                                            </DataTrigger>                                            
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <ContentPresenter x:Name="contentPresenter" 
                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                  Content="{TemplateBinding SelectionBoxItem}" 
                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                  IsHitTestVisible="False" 
                                  Margin="{Binding Padding, RelativeSource={RelativeSource AncestorType=ComboBox}}" 
                                  TextBlock.Foreground="{TemplateBinding Foreground}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding IsOpen, ElementName=PART_Popup}" Value="True">
                    <Setter Property="Tag" TargetName="toggleButton" Value="{Binding ArrowGeometryOpened, RelativeSource={RelativeSource AncestorType=ComboBox}}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsOpen, ElementName=PART_Popup}" Value="False">
                    <Setter Property="Tag" TargetName="toggleButton" Value="{Binding ArrowGeometryClosed, RelativeSource={RelativeSource AncestorType=ComboBox}}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                    <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding ForegroundHover, RelativeSource={RelativeSource AncestorType=ComboBox}}"/>
                </DataTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.6"/>
                </Trigger>
                <Trigger Property="HasItems" Value="False">
                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                </Trigger>
                <Trigger Property="IsGrouping" Value="True">
                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                </Trigger>
                <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </ComboBox.Template>

</ComboBox>
