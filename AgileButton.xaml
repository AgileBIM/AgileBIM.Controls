<Button x:Class="AgileBIM.XamlTemplates.AgileButtonDesigner"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:local="clr-namespace:AgileBIM.XamlTemplates"
        mc:Ignorable="d" 
        d:DesignHeight="400" d:DesignWidth="400">
    <Button.Template>
        <ControlTemplate TargetType="{x:Type Button}" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
            <Border x:Name="border" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    CornerRadius="{Binding BorderRadius, RelativeSource={RelativeSource AncestorType=Button}}" 
                    Background="{TemplateBinding Background}" 
                    SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" 
                                  ContentTemplate="{TemplateBinding ContentTemplate}" 
                                  Content="{TemplateBinding Content}" 
                                  ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                  Focusable="False" 
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                  Margin="{TemplateBinding Padding}" 
                                  RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="{Binding BackgroundDisabled, RelativeSource={RelativeSource AncestorType=Button}}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{Binding BorderBrushDisabled, RelativeSource={RelativeSource AncestorType=Button}}"/>
                    <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding ForegroundDisabled, RelativeSource={RelativeSource AncestorType=Button}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="{Binding BackgroundHover, RelativeSource={RelativeSource AncestorType=Button}}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{Binding BorderBrushHover, RelativeSource={RelativeSource AncestorType=Button}}"/>
                    <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding ForegroundHover, RelativeSource={RelativeSource AncestorType=Button}}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="{Binding BackgroundPressed, RelativeSource={RelativeSource AncestorType=Button}}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{Binding BorderBrushPressed, RelativeSource={RelativeSource AncestorType=Button}}"/>
                    <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding ForegroundPressed, RelativeSource={RelativeSource AncestorType=Button}}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Button.Template>
</Button>
